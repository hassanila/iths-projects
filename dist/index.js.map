{"version":3,"file":"index.js","mappings":"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","names":["_readOnly2","_obj","_mutatorMap","_ref","_x","_this","_arr","_d","_e","reject","resolve","Promise","args","asyncGeneratorStep","_next","_regeneratorRuntime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","toStringTagSymbol","value","enumerable","configurable","writable","define","generator","context","state","done","type","arg","exports","NativeIteratorPrototype","invoke","result","tryLoc","record","next","__await","keys","constructor","reset","stop","dispatchException","hasFinally","abrupt","finallyEntry","complete","finish","resetTryEntry","delegateYield","iterator","resultName","nextLoc","arr2","enumerableOnly","i","_defineProperty","Object","desc","obj","descriptor","console","time","lastTime","performance","now","students","UPPERCASE_VAR_TEST","Student","id","firstName","lastName","email","startDate","Date","_classCallCheck","error","assign","testObj","anotherTestObj","randomkey","_createClass","key","newEmail","obj8345","method1","method2","property1","idCounter","duplicateCounter","min","max","String","Math","floor","random","padStart","some","o","push","_loop","log","student","table","array1","array2","firstvalue","index","length","wait","setTimeout","then","e","object1","name","object2","test","object3","test2","str","arr","strLength","timeEnd","date","jibberish","bind","test1","testF","o1","a","promise","fetch","response","status","duplicatesArr","duplicatesString","uniquesArr","Set","uniqueString","_toConsumableArray","join","trimEnd","diff","round","toUpperCase","_context","x","xBefore","m","u","l","t","varvar","letlet","message","_loop2","rest","scopetest","b","c","hasOwnProperty","keyName","newObj","obj345","someProperty","arr346","Array","fill","reduce","prev","curr","arr777","assert","toFixed","map","Map","set","undefined","get","headers","method","json","asyncTest","_asyncTest","_context2","foo","foobar","foo2","foobar2","hellothere","body","data","occasions","examinationTypeId","_body$data$0$occasion","occasion1","occasion2","byReference","byValue","someFunction","parameter1","parameter2"],"sources":["../javascript-testing/index.js"],"sourcesContent":["\"use strict\";\r\n\r\n// TODO:TEST TOP LEVEL AWAIT\r\n// TODO: IMPORTING AND EXPORTING JS MODULES\r\n\r\nconsole.time(\"test\");\r\nlet lastTime = performance.now();\r\n\r\n\r\n/*\r\nimport {id} from './module.js';\r\n\r\nconsole.log(id);\r\n*/\r\n\r\n// USE CONST BY DEFAULT\r\nconst students = [];\r\n\r\n// UPPERCASE FOR CONFIG VARIABLES\r\nconst UPPERCASE_VAR_TEST = \"TEST123\";\r\n\r\n// CLASS\r\nclass Student {\r\n    constructor(id, firstName, lastName, email, startDate = new Date()) {\r\n        let error;\r\n        if (!(id && firstName && lastName && email)) {\r\n            error = \"Required argument missing!\";\r\n            console.error(error);\r\n            return error;\r\n        }\r\n\r\n        Object.assign(this, {\r\n            id,\r\n            firstName,\r\n            lastName,\r\n            email,\r\n            startDate,\r\n            testObj: {\r\n                anotherTestObj: {\r\n                    randomkey: \"lol\",\r\n                },\r\n            },\r\n        });\r\n    }\r\n\r\n    changeEmail(newEmail) {\r\n        this.email = newEmail;\r\n    }\r\n\r\n}\r\n\r\n\r\nconst obj8345 = {\r\n    method1: function () {\r\n    },\r\n\r\n    method2() {\r\n\r\n    },\r\n    property1: 'test',\r\n\r\n    ['property2']: 'test2',\r\n\r\n    set readOnly(value) {\r\n        console.error('CANNOT SET READ_ONLY VALUE')\r\n    },\r\n    get readOnly() {\r\n        return 'HELLO';\r\n    }\r\n}\r\n\r\n// MAKE PROPERTY READ ONLY\r\n/*Object.defineProperty(obj8345, 'readOnly', {\r\n    writable: false\r\n})*/\r\n\r\n// Generate random students\r\n// and push them to students array\r\n// MATH.RANDOM RETURNS A NUMBER BETWEEN 0 AND 1 (EXCLUDING 1)\r\nlet idCounter = 1;\r\nlet duplicateCounter = 0;\r\n\r\nconst min = 1, max = 10000;\r\n\r\nfor (let idCounter = 1; idCounter <= 10; idCounter++) {\r\n    let id =\r\n        \"97\" + String(Math.floor(Math.random() * (max - min) + min)).padStart(4, \"0\");\r\n\r\n    students.some((o) => o.id === id) && duplicateCounter++;\r\n\r\n    // for (const { id: id2 } of students) {\r\n    //   if (id === id2) {\r\n    //     error = \"DUPLICATE IDs NOT ALLOWED! id: \" + id;\r\n\r\n    //     console.error(error);\r\n    //   }\r\n    // }\r\n\r\n    students.push(new Student(id, \"Joe\", \"Doe\", \"testemail@gmail.com\"));\r\n}\r\n\r\nconsole.error(\"DUPLICATES: \" + duplicateCounter);\r\n\r\n// .some( ) returns true if any of the elements match the set criteria\r\nconsole.log(\r\n    \"979999 \" +\r\n    (students.some((student) => student.id === \"979999\")\r\n        ? \"FOUND\"\r\n        : \"NOT FOUND!\")\r\n);\r\n\r\n\r\nconsole.table(students);\r\n\r\n// OBJECT DESTRUCTURING (in this case first array element and randomkey property within anotherTestObj within testObj)\r\nlet [\r\n    {\r\n        testObj: {\r\n            anotherTestObj: {randomkey: key},\r\n        },\r\n    },\r\n] = students;\r\nconsole.log(`OBJECT DESCTRUCTURING randomkey renamed to key = ${key}`);\r\n\r\nconst array1 = [1, 30, 4, 21, 100000, 5, 7, 6, 2];\r\nconst array2 = [\"alltså\", \"hjälp\", \"åka\", \"löpare\"];\r\n\r\n// ARRAY DESTRUCTURING\r\nlet [firstvalue] = array1; // 1\r\n\r\nfor (const index in students) {\r\n    for (const key in students[index]) {\r\n        //console.log(key + \": \" + students[index][key]);\r\n    }\r\n    if (index < students.length - 1) {\r\n        //console.log(index, students.length - 1);\r\n        //console.log(\"---------------\");\r\n    }\r\n}\r\n\r\n// PROMISE\r\nfunction wait(time) {\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n        if (typeof time !== 'number'/*Number.isNaN(time)*/) {\r\n            return reject(\"Time is not a number\");\r\n        }\r\n\r\n        setTimeout(() => resolve(\"PROMISE SUCCESS!\"), time * 1000);\r\n        //setTimeout(reject.bind(this, \"ERROR: 404 NOT FOUND!\"), time * 1000);\r\n    });\r\n}\r\n\r\nwait(1)\r\n    .then((result) =>\r\n        console.log(\r\n            \"%c\" + result,\r\n            \"background-color: green; color: white; padding: .5rem; border-radius: .5rem;\"\r\n        )\r\n    ).finally(() => {\r\n    // This will be run no matter whether the promise was resolved or rejected\r\n})\r\n    // CATCH WILL BE CALLED IF PROMISE IS REJECTED OR ERROR IS THROWN\r\n    .catch((e) => console.error('wait promise error:', e));\r\n\r\nconst object1 = {name: \"from-object1\"};\r\nconst object2 = {test: \"from-object2\"};\r\n\r\nconst object3 = {...object1, ...object2, ...{test2: \"from-object3\"}};\r\n\r\nconsole.log(object3);\r\n\r\nconst str = \"hello there!\";\r\nconst arr = [];\r\narr[5000] = \"3\";\r\n\r\nlet strLength = str.length - 1;\r\n\r\n//for (let i = 1; i <= 500; i++) {\r\n// 18ms @ 500000 iterations with string length recalc at every iteration\r\n//arr.push(undefined);\r\n\r\n// 500ms @ 500000 iterations\r\n//arr.push([...str].pop());\r\n//}0\r\n\r\nconsole.timeEnd(\"test\");\r\n\r\nlet o = {date: \"Object yesss\"};\r\n\r\n//OPTIONAL CHAINING OPERATOR\r\nconst jibberish = console.log.bind(this, null ?? (o && o?.[\"date\"]));\r\n\r\njibberish();\r\n\r\n// NESTED FUNCTIONS AND FUNCTION RETURNING\r\n// <<<FUNCTION STATEMENT>>>\r\nfunction test1() {\r\n    return function () {\r\n        return function () {\r\n            return function () {\r\n                return function () {\r\n                    console.log(o);\r\n                    return \"YEAH\";\r\n                };\r\n            };\r\n        };\r\n    };\r\n}\r\n\r\n// <<<FUNCTION DECLARATION/EXPRESSION>>>\r\nlet testF = () => null;\r\n\r\nconsole.log(test1()()()()());\r\n\r\nlet o1 = {a: 777};\r\nconsole.log(o1);\r\n\r\n// PROMISES\r\nlet promise = fetch(\"https://randomuser.me/api/\");\r\n\r\npromise\r\n    .then((response) => console.log(\"RESPONSE STATUS: \" + response?.status))\r\n    .catch((error) =>\r\n        console.log(\r\n            \"%cFETCH ERROR\",\r\n            \"background-color: red; color: white; padding: .5em; border-radius: .2em\"\r\n        )\r\n    );\r\nconsole.log(promise);\r\n\r\n// SELF CALLING FUNCTION\r\n(function () {\r\n    console.log(\"test\");\r\n})();\r\n\r\n// SET UNIQUE ARRAY ITERATOR\r\n// SPREAD & REST OPERATOR\r\nlet duplicatesArr = [\r\n    \"a\",\r\n    \"b\",\r\n    \"c\",\r\n    \"a\",\r\n    \"b\",\r\n    \"c\",\r\n    \"a\",\r\n    \"b\",\r\n    \"c\",\r\n    \"a\",\r\n    \"b\",\r\n    \"c\",\r\n];\r\nlet duplicatesString =\r\n    \"abc abc abc abc abc abc abc abc abc abc abc abc abc abc\";\r\n\r\nlet uniquesArr = [...new Set(duplicatesArr)];\r\nlet uniqueString = [...new Set(duplicatesString)].join(\"\").trimEnd();\r\n\r\nconsole.log(duplicatesArr, uniquesArr);\r\nconsole.log(duplicatesString);\r\nconsole.log(uniqueString);\r\n\r\n//debugger;\r\n\r\n// MILLISECONDS DIFFERENCE\r\nlet diff = Math.round(performance.now() - lastTime);\r\nconsole.log(`Diff: ${diff}ms`);\r\n\r\n// REMAINDER\r\nconsole.log(\"Remainder check: \" + String(5 % 4 === 1).toUpperCase());\r\n\r\n// STRING REPLACEMENTS\r\nconsole.log(\r\n    \"Hello %s! What's up this %s? Call me at %s\",\r\n    \"Someone\",\r\n    \"Friday\",\r\n    \"0720549244\"\r\n);\r\n\r\n// GENERATOR FUNCTION\r\n// RETURNS AN ITERATOR THAT WILL YIELD A DIFFERENT VALUE EACH TIME .next is invoked on it\r\n// YIELD PAUSES THE GENERATOR FUNCTION\r\nfunction* generator() {\r\n    yield \"first\";\r\n    yield \"second\";\r\n    yield 3;\r\n}\r\n\r\n// LOGICAL OR, AND & NULLISH ASSIGNMENTS\r\nlet x = 1,\r\n    xBefore = x;\r\n\r\nx ||= \"||\"; // SAME AS x || (x = \"||\"), NOT x = x || \"||\", it evaluates only if x has a falsy value\r\nx ??= \"??\"; // it evaluates only if x has a nullish (null or undefined) value\r\nx &&= \"&&\"; // it evaluates only if x has a truthy value\r\n\r\n\r\n// FALSY VALUES\r\n/*\r\n*\r\n* \"\"\r\n* false\r\n* NaN\r\n* null\r\n* undefined\r\n* 0\r\n*\r\n* */\r\n\r\nconsole.log(\"xBefore: %s\\nxAfter: %s\", xBefore, x);\r\n\r\n// DEEP OBJECT CLONING WITHOUT REFERENCES TO OLD OBJECT (ES13/2022)\r\n//structuredClone(object)\r\n\r\n// OBJECT CLONING (NO DEEP CLONING)\r\n/* const food = { beef: \"🥩\", bacon: \"🥓\" };\r\n{ ...food }\r\nObject.assign({}, food);\r\nJSON.parse(JSON.stringify(food))\r\n */\r\n\r\n// OBJ DEEP CLONING VIA JSON (WILL IGNORE FUNCTIONS)\r\n// var newObject = JSON.parse(JSON.stringify(oldObject))\r\n\r\n// MULTIPLE VARIABLES SAME VALUE DECLARATION\r\nlet m, u, l, t, i;\r\nm = u = l = t = i = \"YES\";\r\nconsole.log(m, u, l, t, i);\r\n\r\n// VAR (FUNCTION SCOPE or global) VS LET (BLOCK SCOPE or function or global)\r\n{\r\n    var varvar = \"var\";\r\n    let letlet = \"let\";\r\n\r\n    console.log(\"var inside block: \" + varvar);\r\n    console.log(\"let inside block: \" + letlet);\r\n}\r\ntry {\r\n    console.log(\"var outside block: \" + varvar);\r\n    console.log(\"let outside block: \" + letlet);\r\n} catch ({message: e}) {\r\n    console.log(\"let outside block: \" + e);\r\n} finally {\r\n    // This will always run after\r\n}\r\n\r\n// LEXICAL SCOPING MEANS THAT A FUNCTION OR A BLOCK WILL REMEMBER\r\n// ALL THE VARIABLES/FUNCTIONS IN THE SCOPE CHAIN (PARENTS)\r\n(function () {\r\n    // VAR WILL HAVE THIS FUNCTION AS IT'S SCOPE, if we didn't have it inside a function\r\n    // it would have a global scope\r\n\r\n    for (var i = 0; i < 10; i++) {\r\n        // same as if var was initialized here everytime\r\n        setTimeout(() => console.log(\"VAR SETTIMEOUT: \" + i), i * 1000);\r\n    }\r\n\r\n    for (let i = 0; i < 10; i++) {\r\n        //LET WILL HAVE THIS BLOCK AS IT'S SCOPE\r\n        // let will also be initialized here everytime but to this block scope only\r\n        setTimeout(() => console.log(\"LET SETTIMEOUT: \" + (i + 1)), i * 1000);\r\n    }\r\n\r\n    // let i won't exist here because it has a block scope\r\n    // var i will exist here and be the last value that it was set to, var i has a function scope\r\n})();\r\n\r\n// REST PARAMETERS AND SPREAD OPERATOR\r\n((...rest) => console.log(\"REST PARAMETERS:\", ...rest))(\r\n    \"param1, param2, param3\"\r\n);\r\n\r\n/** ARROW FUNCTIONS THIS, ARROW FUNCTIONS SHOULD NOT BE USED AS METHODS BECAUSE\r\nTHEY DON'T CREATE A NEW SCOPE, AND THEY DON'T HAVE THEIR OWN THIS, THEY HAVE GLOBAL SCOPE?\r\ncall, apply and bind does not bind this in arrow functions?\r\n **/\r\nconst obj = {\r\n    // does not create a new scope\r\n    scopetest: 10,\r\n    b: () => console.log(this.scopetest ?? \"ARROW FUNCTIONS HAVE GLOBAL THIS\"),\r\n    c: function () {\r\n        console.log(\r\n            typeof this.scopetest !== \"undefined\" &&\r\n            \"NORMAL FUNCTIONS HAVE LEXICAL SCOPE THIS\"\r\n        );\r\n    },\r\n};\r\nobj.b();\r\nobj.c();\r\n\r\n// CONTINUE\r\nfor (let key in obj) {\r\n    if (!obj.hasOwnProperty(key)) continue;\r\n\r\n    console.log(key);\r\n}\r\n\r\n\r\n// TODO: TRY TO UNDERSTAND\r\n// REDUCE OBJS AND ARRAYS\r\n// https://itnext.io/explode-an-array-into-a-deeply-nested-object-with-this-simple-recursive-function-4094ac1eeb8b\r\n/*\r\nconst explode = (array, key, ...rest) =>\r\n    array.reduce((acc, item) => ({\r\n        ...acc,\r\n        [item[key]]: rest.length ? {\r\n            ...acc[item[key]],\r\n            ...explode([item], ...rest)\r\n        } : item\r\n    }), {})*/\r\n\r\n\r\n// USING A VARIABLE AS A KEY NAME\r\nlet keyName = 'test';\r\n\r\nlet newObj = {\r\n    [keyName]: 'value-here'\r\n}\r\n\r\n\r\n// OBJ CONDITIONALLY ADD PROPERTY INLINE\r\nconst obj345 = {...(true && {someProperty: 'value'})}\r\n\r\n\r\n/** REFERENCE VS VALUE COPY\r\nPRIMITIVES ARE COPIED AS VALUE\r\nOBJS AND ARRS ARE REFERENCED, they \"disconnect\" only if new value is assigned to them\r\nFILL ARRAY WITH INDEX NR + 1\r\n **/\r\nconst arr346 = new Array(10).fill(0).reduce((prev, curr, i) => prev.push(i + 1) && prev, []);\r\nconsole.log('arr346', arr346);\r\n\r\nlet arr777 = arr346;\r\n\r\narr777.push('THIS IS FROM ARR 777 PUSH');\r\n\r\nconsole.log('arr777:', arr777);\r\nconsole.log('arr346:', arr346);\r\n\r\n\r\n// CONSOLE.ASSERT() FOR TESTING\r\nconsole.assert(true === false, 'TRUE IS NOT FALSE')\r\n\r\n\r\n// ADDING NUMBERS WITH DECIMALS\r\nconsole.log('ADDING NUMBERS WITH DECIMALS, this should be 0.0065', 0.005 + 0.0015);\r\n\r\n\r\n// TOP LEVEL AWAIT, ONLY VALID IN JS MODULES\r\n// THIS CODE WILL RESOLVE AFTER 20s\r\n/*console.log('%cAWAIT', 'color: green;')\r\nawait new Promise((resolve, reject) => setTimeout(resolve, 20000))*/\r\n\r\n\r\n\r\n// NUMBER WITH X AMOUNT OF DECIMALS TO FIXED SIZE\r\n// IT WILL AUTO ROUND\r\nconsole.log('NUMBER TOFIXED: ', 0.459939.toFixed(2));\r\n\r\n\r\n// MAP, can have objects, booleans etc as keys, must use set, get, has, delete\r\n// .size instead of .length\r\nlet map = new Map();\r\nmap.set(true, 'map value for true');\r\nmap.set(undefined, 'map value for undefined');\r\nconsole.log('map', map.get(true))\r\nconsole.log('map', map.get(undefined))\r\n\r\n\r\n// FETCH\r\nfetch('https://avancera.app/cities/', {\r\n    headers: {'Content-Type': 'application/json'},\r\n    method: 'GET'\r\n}).then(response => {\r\n    return response.json()\r\n}).then(arr => console.log(arr[0])).catch(error => console.error('FETCH ERROR', error));\r\n\r\n\r\n// ASYNC FUNCTIONS\r\n// THEY RETURN A PROMISE BY DEFAULT?\r\nasync function asyncTest() {\r\n    await new Promise((resolve, reject) => {\r\n        setTimeout(resolve, 5000);\r\n    });\r\n\r\n    console.log('This should be logged after 5s');\r\n}\r\n\r\n\r\nasyncTest();\r\n\r\n\r\n/** THIS WILL CONSOLE.LOG UNDEFINED\r\nIF LET OR CONST WAS USED IT WOULD THROW AN ERROR: FOO IS NOT DEFINED, aka TDZ, temporal dead zone\r\nTHIS IS DUE TO HOISTING, WHERE VARIABLES ARE INITIATED (ALLOCATED MEMORY) AND FUNCTION STATEMENTS MOVED TO THE TOP\r\nand FUNCTION STATEMENTS ARE INITIATED BEFORE THE CODE EXECUTES\r\n **/\r\nvar foo = 1\r\nvar foobar = function () {\r\n    console.log(foo) //undefined\r\n    var foo = 2\r\n}\r\nfoobar()\r\n\r\n\r\ntry {\r\n    let foo2 = 1\r\n    let foobar2 = function () {\r\n        console.log(foo2) // Cannot access 'foo2' before initialization // Because of TDZ\r\n        let foo2 = 2\r\n    }\r\n    foobar2();\r\n} catch (e) {\r\n    console.error(e);\r\n}\r\n\r\n// will log undefined as void runs the statement and then returns undefined and the statement will not be defined\r\nconsole.log(void true);\r\n\r\n\r\n// this function statement will not be defined because of void, it can be run inline but won't be defined\r\ntry {\r\n\r\n    void function hellothere() {\r\n        console.log('%cFUNCTION', 'color:red;')\r\n    }();\r\n    console.log(hellothere); // ReferenceError: hellothere is not defined\r\n} catch (e) {\r\n    console.error(e);\r\n}\r\n\r\n// MORE OBJECT/ARRAY DESTRUCTURING\r\nconst body = {data: [{occasions: [{examinationTypeId: 3}, {examinationTypeId: 4}]}]}\r\nconst {data: [{occasions: [occasion1, occasion2]}]} = body; //same as const occasion1 = body.data[0].occasions[0], occasion2 = body.data[0].occasions[1];\r\n\r\n\r\n\r\n// This will log A, D, C, B\r\n// setTimeout is async, so the function callback gets added to the end of the call stack / queue\r\nconsole.log('A');\r\nsetTimeout(() => console.log('B'), 50);\r\nsetTimeout(() => console.log('C'), 0);\r\nconsole.log('D');\r\n\r\n\r\n// PASS BY REFERENCE VS PASS BY VALUE\r\nconst byReference = {}; // objs and arrays get passed as reference\r\nconst byValue = 'string'; // any primitive type will be passed by value\r\nconst someFunction = function (parameter1, parameter2) {\r\n    parameter1.someProperty = 'Hello'; // this will change the object called byReference\r\n\r\n    parameter1 = {}; // This will overwrite the object parameter1 but only locally in this function scope\r\n    parameter2 = 30; /* This will overwrite the string parameter2 but only locally in this function scope\r\n                        and because parameter2 is passed by value it cannot be changed inside this function scope */\r\n}\r\n\r\nsomeFunction(byReference, byValue);\r\nconsole.log(byReference); // {someProperty: 'Hello'}\r\nconsole.log(byValue); // 'string';"]}